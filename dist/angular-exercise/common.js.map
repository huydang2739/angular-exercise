{"version":3,"sources":["./src/app/shared/list-container.ts","./src/app/api/get-image.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { OnInit, ChangeDetectorRef, Optional, Injectable, Component, Directive } from '@angular/core'\r\nimport { Params, Router, ActivatedRoute } from '@angular/router'\r\nimport { omitBy, isUndefined } from 'lodash-es'\r\n\r\nimport { Subject, Observable, merge } from 'rxjs'\r\nimport { tap, switchMap, finalize } from 'rxjs/operators'\r\nimport { QueryResult } from '../types/model'\r\n@Directive()\r\nexport abstract class ListContainer<T> implements OnInit {\r\n  isLoading: boolean\r\n  total: number\r\n  currentPage = 1\r\n  sort: string\r\n  query: string\r\n  params: { [key: string]: any } = {}\r\n  items: T[]\r\n\r\n  get totalPages(): number {\r\n    return Math.ceil(this.total / this.quantity)\r\n  }\r\n\r\n  get currentParams() {\r\n    return this.useRoute ? this.route.snapshot.params : {}\r\n  }\r\n\r\n  protected refreshTrigger = new Subject()\r\n\r\n  constructor(\r\n    protected route: ActivatedRoute,\r\n    protected router: Router,\r\n    public quantity: number = 10,\r\n    protected useRoute: boolean = true,\r\n    @Optional() protected cdr: ChangeDetectorRef = null\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscribe()\r\n  }\r\n\r\n  onPageChanged(pageNumber: string) {\r\n    this.navigate({ ...this.currentParams, page: pageNumber })\r\n  }\r\n\r\n  onQuantityChanged(quantity: number) {\r\n    this.navigate({ ...this.currentParams, page: 1, quantity: quantity })\r\n  }\r\n\r\n  refresh() {\r\n    this.refreshTrigger.next(this.route.snapshot.params)\r\n  }\r\n\r\n  protected abstract fetch(): Observable<T>\r\n\r\n  public queryParam(value: { inputValue: string; key: string }) {\r\n    this.query = value.inputValue;\r\n    this.navigate({ ...this.currentParams, page: 1, query: this.query })\r\n    this.subscribe()\r\n  }\r\n\r\n  protected getQuery() {\r\n    return this.query\r\n  }\r\n\r\n  protected subscribe() {\r\n    const next = result => {\r\n      this.isLoading = false\r\n      this.handleResult(result)\r\n    }\r\n\r\n    const error = reason => {\r\n      this.isLoading = false\r\n      this.handleError(reason)\r\n    }\r\n\r\n    if (this.useRoute) {\r\n      console.log(this.useRoute)\r\n      merge(this.refreshTrigger, this.route.params).pipe(\r\n        tap(this.readRouteParams.bind(this)),\r\n        switchMap(() => {\r\n          this.isLoading = true\r\n          return this.fetch().pipe(finalize(() => {\r\n            if (this.cdr) {\r\n              this.cdr.detectChanges()\r\n            }\r\n          }))\r\n        })\r\n      ).subscribe(next, error)\r\n    } else {\r\n      this.refreshTrigger.pipe(\r\n        switchMap(() => {\r\n          this.isLoading = true\r\n          return this.fetch().pipe(finalize(() => {\r\n            if (this.cdr) {\r\n              this.cdr.detectChanges()\r\n            }\r\n          }))\r\n        })\r\n      ).subscribe(next, error)\r\n    }\r\n  }\r\n\r\n  protected readRouteParams(params: { [key: string]: any }) {\r\n    const { page, quantity, sort, query } = params\r\n    this.currentPage = +page || 1\r\n    this.quantity = +quantity || this.quantity\r\n    this.sort = sort\r\n    this.query = query\r\n    const parsedParams = {}\r\n    // tslint:disable-next-line:forin\r\n    for (const key in params) {\r\n      try {\r\n        parsedParams[key] = JSON.parse(params[key])\r\n      } catch (e) {\r\n        parsedParams[key] = params[key]\r\n      }\r\n    }\r\n    this.params = parsedParams\r\n  }\r\n\r\n  protected navigate(params: Params) {\r\n    if (this.useRoute) {\r\n      params = omitBy(Object.assign({}, params), isUndefined)\r\n      this.router.navigate([params], { relativeTo: this.route })\r\n    } else {\r\n      this.mergeParams(params)\r\n      this.refreshTrigger.next()\r\n    }\r\n  }\r\n\r\n  protected mergeParams(params: Params) {\r\n    this.currentPage = params.page || 1\r\n    this.quantity = params.quantity || this.quantity\r\n    this.params = Object.assign({}, this.params, params)\r\n  }\r\n\r\n  protected handleResult(result: QueryResult<T>) {\r\n    this.total = result.count\r\n    this.items = result.items\r\n    console.log(this.total, this.items);\r\n\r\n  }\r\n\r\n  protected abstract handleError(reason: any)\r\n\r\n  detechChange() {\r\n    if (this.cdr) {\r\n      this.cdr.detectChanges()\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AnimalModel, FoodImageModel, QueryResult } from '../types/model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetImageService {\r\n  baseUrl = 'https://60ab7dc75a4de40017cca339.mockapi.io/api/'\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  protected createParams(params: { [key: string]: any }): HttpParams {\r\n    return Object.keys(params).reduce((m, k) => {\r\n      if (params[k] != null) {\r\n        return m.set(k, params[k].toString())\r\n      }\r\n      return m\r\n    }, new HttpParams())\r\n  }\r\n\r\n  getAnimalImage(params: { page: number, limit: number, search: string }): Observable<QueryResult<FoodImageModel>>  {\r\n    return this.httpClient.get<QueryResult<FoodImageModel>>(`${this.baseUrl}/animals`, { params: this.createParams(params) })\r\n  }\r\n\r\n  getFoodImage(params: { page: number, limit: number, search: string }): Observable<QueryResult<AnimalModel>>  {\r\n    return this.httpClient.get<QueryResult<AnimalModel>>(`${this.baseUrl}/foods`, { params: this.createParams(params) })\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}